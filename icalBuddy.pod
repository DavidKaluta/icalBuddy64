=encoding utf8

=head1 NAME

B<icalBuddy> -- query the OS X calendar database for items


=head1 SYNOPSIS

=over 10

=item B<icalBuddy>

[options] I<command>

=back

=head1 DESCRIPTION

B<icalBuddy> queries the OS X calendar database for items and outputs them.

The options are as follows:

=over 12

=item I<command>

Specifies the general action to take. Possible values are:

=over 24

=item B<C<eventsToday>>

Print events occurring today

=item B<C<eventsToday+NUM>>

Print events occurring between today and NUM days into the future, where NUM is an integer

=item B<C<eventsNow>>

Print events occurring at present time

=item B<C<eventsFrom:START to:END>>

Print events occurring between the two specified dates. The dates (START and END) may be specified in a natural language form (such as C<tomorrow at noon> or C<june 10 at 6 pm>) or as relative dates (such as C<today+3> or C<yesterday-2>) but the safest format is C<YYYY-MM-DD HH:MM:SS +HHMM> (the C<+HHMM> part at the end specifies the timezone offset in hours and minutes from GMT, and it may have a plus or minus prefix)

=item B<C<uncompletedTasks>>

Print uncompleted tasks

=item B<C<undatedUncompletedTasks>>

Print uncompleted tasks that have no due date

=item B<C<tasksDueBefore:DATE>>

Print uncompleted tasks that are due before the given date. DATE may be specified in a natural language form (such as C<tomorrow at noon> or C<june 10 at 6 pm>) or as a relative date (such as C<today+3> or C<yesterday-2>) but the safest format is C<YYYY-MM-DD HH:MM:SS +HHMM> (the C<+HHMM> part at the end specifies the timezone offset in hours and minutes from GMT, and it may have a plus or minus prefix)

=item B<C<calendars>>

Print a list of all the calendars

=item B<C<strEncodings>>

Print all the possible string encodings

=item B<C<editConfig>>

Open the configuration file for editing in a GUI editor application

=item B<C<editConfigCLI>>

Open the configuration file for editing in a command-line editor

=back


=item B<-V>, B<--version>

Print version number and exit.

=item B<-u>, B<--checkForUpdates>

Check for updates to self. Also allows for automatic updating of self (with minimal user interaction, straight from the command line.)

=item B<-d>, B<--debug>

Print diagnostic information into the standard error stream (for example, how input dates are interpreted).

=item B<-sc>, B<--separateByCalendar>

Separate events/tasks in the output by calendar.

=item B<-sd>, B<--separateByDate>

Separate events/tasks in the output by date.

=over 8

=item B<-sed>, B<--showEmptyDates>

Display sections for empty dates (i.e. dates that have no items) that fall within the specified range as well. Applies only if the B<-sd> argument is used.

=item B<-t>, B<--showTodaysSection>

Always display the section for the current date (even when it is empty). Applies only if the B<-sd> argument is used.

=back

=item B<-sp>, B<--separateByPriority>

Separate tasks in the output by priority.

=item B<-f>, B<--formatOutput>

Use ANSI escape sequences to format the output and hopefully make it more readable.

=item B<-nc>, B<--noCalendarNames>

Omit calendar names from the output. Does not apply if the B<-sc> argument is used.

=item B<-nrd>, B<--noRelativeDates>

Never use "natural language relative dates" (e.g. "today", "yesterday" or "day after tomorrow") instead of the default date format presentation (see the B<-df> argument).

=item B<-npn>, B<--noPropNames>

Omit property names from the output (i.e. only show property values -- e.g. "My house" instead of "location: My house").

=item B<-n>, B<--includeOnlyEventsFromNowOn>

If the I<command> value C<eventsToday> is used, only output events that occur between the current time and the end of the day (as opposed to events that occur between the start and end of the day, as by default.)

=item B<-oa>, B<--onlyAllDayEvents>

Only output all-day events.

=item B<-na>, B<--maxNumAttendees>

Maximum number of attendees to show for events.

=item B<-nnc>, B<--maxNumNoteChars>

Maximum number of characters to display from notes.

=item B<-uid>, B<--showUIDs>

Display event/task UIDs (unique identifiers).

=item B<-eed>, B<--excludeEndDates>

Do not output the dates/times of when events end.

=item B<-ea>, B<--excludeAllDayEvents>

Do not output all-day events.

=item B<-li>, B<--limitItems> I<num>

Limit the number of printed items (events/tasks) in the output to a maximum of I<num> items.

=item B<-std>, B<--sortTasksByDate>

Sort tasks by their due dates, in descending order.

=item B<-stda>, B<--sortTasksByDateAscending>

Sort tasks by their due dates, in ascending order.

=item B<--strEncoding> I<encoding>

Use the specified string encoding for the output. Run the app once with the 'strEncodings' I<command> value to see all the possible values you can use here.

=item B<-tf>, B<--timeFormat> I<format>

Format times included in the output based on the I<format> formatting string. See the B<Date and Time Format Specifiers> section below for documentation on the syntax to use.

=item B<-df>, B<--dateFormat> I<format>

Format dates included in the output based on the I<format> formatting string. See the B<Date and Time Format Specifiers> section below for documentation on the syntax to use.

=item B<-po>, B<--propertyOrder> I<value>

Print properties of events/tasks in the order specified by I<value>, which must be a comma-separated list of property names. The allowed property names are: title, location, notes, attendees, url, datetime, priority.

=item B<-ps>, B<--propertySeparators> I<value>

Use the strings specified in I<value> as the separators between item properties in the output. I<value> must be a list of strings where each component is separated by an arbitrary character that is present also as the first and the last character in the value (that means you can use any character you'd like as the separator, as long as you also use it at the beginning and the end.) The components specified in I<value> will be used in order, for each item, starting from the first printed property. If the number of printed properties for an item is bigger than the number of components in I<value>, the last component is used as the separator for the remaining properties. For example, a value of S<C<|, | - |>> would specify S<C<, >> as the separator between the first and the second property and S<C< - >> as the separator between all the rest of the properties. The default is S<C<|\\n    |>> (i.e. use a newline and four spaces as the separator for all properties.)

=item B<-b>, B<--bullet> I<value>

Sets I<value> as the string to be used as the bullet point in the output.

=item B<-ab>, B<--alertBullet> I<value>

Sets I<value> as the string to be used as the alert bullet point in the output.

=item B<-ss>, B<--sectionSeparator> I<value>

Sets I<value> as the string to be used as the section separator in the output. The default is a newline followed by a bunch of hyphens (-).

=item B<-ic>, B<--includeCals> I<value>

Includes only items from specific calendars into the output. I<value> must be a comma-separated list of calendar titles or UIDs (you can see UIDs (unique identifiers) for your calendars by using the 'calendars' I<command> parameter.) The B<-ic> and B<-ec> parameters will be handled in the order of first include, then exclude.

=item B<-ec>, B<--excludeCals> I<value>

Excludes items from specific calendars from the output. I<value> must be a comma-separated list of calendar titles or UIDs (you can see UIDs (unique identifiers) for your calendars by using the 'calendars' I<command> parameter.) The B<-ic> and B<-ec> parameters will be handled in the order of first include, then exclude.

=item B<-ict>, B<--includeCalTypes> I<value>

Includes only items from specific types of calendars into the output. I<value> must be a comma-separated list consisting of one or more of the following: birthday, caldav, exchange, imap, local, subscription, icloud ("icloud" is an alias for "caldav", and vice versa, because iCloud calendars on Lion are actually CalDAV calendars). The B<-ict> and B<-ect> parameters will be handled in the order of first include, then exclude, and are always applied before the B<-ic> and B<-ec> parameters.

=item B<-ect>, B<--excludeCalTypes> I<value>

Excludes items from specific types of calendars from the output. See B<-ict> for a list of allowed values. The B<-ict> and B<-ect> parameters will be handled in the order of first include, then exclude, and are always applied before the B<-ic> and B<-ec> parameters.

=item B<-iep>, B<--includeEventProps> I<value>

Includes only event properties specified by I<value> into the output. I<value> must be a comma-separated list of property names. Possible property names are: location, url, notes, attendees, datetime, title.

=item B<-eep>, B<--excludeEventProps> I<value>

Excludes event properties specified by I<value> from the output. I<value> must be a comma-separated list of property names. See B<-iep> for a list of possible property names. A value of C<*> will exclude all properties and make sure just the title is printed.

=item B<-itp>, B<--includeTaskProps> I<value>

Includes only task properties specified by I<value> into the output. I<value> must be a comma-separated list of property names. Possible property names are: url, notes, datetime and priority.

=item B<-etp>, B<--excludeTaskProps> I<value>

Excludes task properties specified by I<value> from the output. I<value> must be a comma-separated list of property names. See B<-itp> for a list of possible property names. A value of C<*> will exclude all properties and make sure just the title is printed.

=item B<-cf>, B<--configFile> I<path>

Use the configuration file located at I<path> instead of the default one (F<~/.icalBuddyConfig.plist>). Pass in an empty string ("") to make icalBuddy ignore the configuration file completely.

=item B<-lf>, B<--localizationFile> I<path>

Use the localization file located at I<path> instead of the default one (F<~/.icalBuddyLocalization.plist>).

=item B<-nnr>, B<--notesNewlineReplacement> I<value>

Replaces newlines in values of the notes property with I<value>.


=back


=head1 DATE AND TIME FORMAT SPECIFIERS

Date format specifiers (used with the B<-df> (or B<--dateFormat>) argument:

=over 12

=item B<%%>

A S<C<%>> character

=item B<%RW>

Relative week (e.g. "next week", or "10 weeks from now")

=item B<%RD>

Relative day (e.g. "yesterday", "today", or "day after tomorrow")

=item B<%a>

Abbreviated weekday name

=item B<%A>

Full weekday name

=item B<%b>

Abbreviated month name

=item B<%B>

Full month name

=item B<%d>

Day of the month as a decimal number (01-31)

=item B<%e>

Same as B<%d> but does not print the leading 0 for days 1 through 9 (unlike strftime(3), does not print a leading space)

=item B<%j>

Day of the year as a decimal number (001-366)

=item B<%m>

Month as a decimal number (01-12)

=item B<%w>

Weekday as a decimal number (0-6), where Sunday is 0

=item B<%y>

Year without century (00-99)

=item B<%Y>

Year with century (such as 1990)

=item B<%x>

Date using the date representation for the locale, including the time zone (produces different results from strftime(3))

=item B<%c>

Shorthand for S<C<%X %x>>, the locale format for date and time

=back

Time format specifiers (used with the B<-tf> (or B<--timeFormat>) argument:

=over 12

=item B<%%>

A S<C<%>> character

=item B<%F>

Milliseconds as a decimal number (000-999)

=item B<%H>

Hour based on a 24-hour clock as a decimal number (00-23)

=item B<%I>

Hour based on a 12-hour clock as a decimal number (01-12)

=item B<%M>

Minute as a decimal number (00-59)

=item B<%p>

AM/PM designation for the locale

=item B<%S>

Second as a decimal number (00-59)

=item B<%Z>

Time zone name (such as Pacific Daylight Time; produces different results from strftime(3))

=item B<%z>

Time zone offset in hours and minutes from GMT (HHMM)

=item B<%X>

Time using the time representation for the locale (produces different results from strftime(3))

=back



=head1 EXAMPLES

	$ icalBuddy -sc uncompletedTasks

Outputs all uncompleted tasks, separated by calendar

	$ icalBuddy -sd -ic Work,Home -ec WeekNumbers eventsToday

Outputs all events occurring today from all calendars where the title or UID matches 'Work' or 'Home' and the title or UID does not match 'WeekNumbers', separated by date

	$ icalBuddy eventsFrom:"2009-01-01 00:00:00 +02:00" to:"2009-01-31 23:59:59 +02:00"

Outputs all events occurring between the first of january, 2009 and the 31st of january, 2009 (using the timezone GMT+02:00)



=head1 SEE ALSO

icalBuddyConfig(1), icalBuddyLocalization(1)

=head1 AUTHORS

This man page has been written by Ali Rantakari (http://hasseg.org)

